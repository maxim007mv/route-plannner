import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { RouteData } from '../models/route-data';
import { environment } from '../../environments/environment';
import { catchError, firstValueFrom } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class RouteService {
  private apiUrl = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent';
  private currentRoute: RouteData | null = null;
  private calculator: any;
  private wasmReady = false;

  constructor(private http: HttpClient) {
    this.initWasm();
  }

  private async initWasm() {
    try {
      const wasmModule = await import('../../assets/wasm/route_calculator.js');
      const instance = await wasmModule.createModule();
      this.calculator = new instance.RouteCalculator();
      this.wasmReady = true;
      console.log('WASM –º–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WASM:', error);
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ WASM
  private async ensureWasmReady() {
    if (!this.wasmReady) {
      await this.initWasm();
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –º–∞—Ä—à—Ä—É—Ç–∞
  calculateRouteTime(coordinates: Array<{lat: number, lng: number}>): number {
    if (!this.calculator) return 0;

    try {
      return this.calculator.estimateTime(coordinates);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏:', error);
      return 0;
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–µ–π —Ç–æ—á–∫–∏
  findNearestPoint(target: {lat: number, lng: number}, points: Array<{lat: number, lng: number}>) {
    if (!this.calculator) return null;

    try {
      return this.calculator.findNearestPoint(target, points);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–µ–π —Ç–æ—á–∫–∏:', error);
      return null;
    }
  }

  private async retryRequest(fn: () => Promise<any>, retries = 5, delay = 2000): Promise<any> {
    try {
      return await fn();
    } catch (error: any) {
      if (retries > 0) {
        const nextDelay = delay * 1.5;
        await new Promise(resolve => setTimeout(resolve, delay));
        return this.retryRequest(fn, retries - 1, nextDelay);
      }

      if (error.status === 503) {
        throw new Error('–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.');
      }
      throw new Error(error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞');
    }
  }

  async generateRoute(formData: any): Promise<RouteData> {
    await this.ensureWasmReady();
    try {
      const prompt = this.createRoutePrompt(formData);
      console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –ø—Ä–æ–º–ø—Ç–æ–º:', prompt);

      const headers = new HttpHeaders()
        .set('Content-Type', 'application/json')
        .set('Cache-Control', 'no-cache');

      const params = { key: environment.geminiApiKey };

      const response = await this.retryRequest(() =>
        firstValueFrom(
          this.http.post(this.apiUrl, {
            contents: [{
              parts: [{ text: prompt }]
            }],
            generationConfig: {
              temperature: 0.7,
              topK: 40,
              topP: 0.95,
              maxOutputTokens: 2048,
            }
          }, { headers, params }).pipe(
            catchError(error => {
              console.error('–û—à–∏–±–∫–∞ API:', error);
              throw error;
            })
          )
        )
      );

      console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API:', response);
      const parsedRoute = this.parseResponse(response);
      console.log('–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç:', parsedRoute);

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º C++ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞
      if (this.calculator && parsedRoute.coordinates.length > 0) {
        const optimizedCoordinates = this.calculator.optimizeRoute(parsedRoute.coordinates);
        const routeStats = this.calculator.calculateRouteStats(optimizedCoordinates);

        return {
          ...parsedRoute,
          coordinates: optimizedCoordinates,
          stats: routeStats
        };
      }

      return parsedRoute;
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –≤ generateRoute:', error);
      throw error;
    }
  }

  private createRoutePrompt(formData: any): string {
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
    const routeTemplates = {
      art: [
        // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã ...
        {
          name: "–ó–∞–º–æ—Å–∫–≤–æ—Ä–µ—á—å–µ: –∫—É–ø–µ—á–µ—Å–∫–∞—è –ú–æ—Å–∫–≤–∞",
          description: `–ú–∞—Ä—à—Ä—É—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º—É —Ä–∞–π–æ–Ω—É –ó–∞–º–æ—Å–∫–≤–æ—Ä–µ—á—å–µ, –∑–Ω–∞–∫–æ–º—è—â–∏–π —Å –∫—É–ø–µ—á–µ—Å–∫–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π –∏ –∫—É–ª—å—Ç—É—Ä–æ–π —Å—Ç–∞—Ä–æ–π –ú–æ—Å–∫–≤—ã.

          –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞:
          1. –¢—Ä–µ—Ç—å—è–∫–æ–≤—Å–∫–∞—è –≥–∞–ª–µ—Ä–µ—è (–õ–∞–≤—Ä—É—à–∏–Ω—Å–∫–∏–π –ø–µ—Ä.)
          - –û—Å–º–æ—Ç—Ä —à–µ–¥–µ–≤—Ä–æ–≤ —Ä—É—Å—Å–∫–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞
          - –ò–∫–æ–Ω—ã –ê–Ω–¥—Ä–µ—è –†—É–±–ª–µ–≤–∞
          - "–î–µ–≤–æ—á–∫–∞ —Å –ø–µ—Ä—Å–∏–∫–∞–º–∏" –°–µ—Ä–æ–≤–∞

          2. –•—Ä–∞–º –ö–ª–∏–º–µ–Ω—Ç–∞ –ü–∞–ø—ã –†–∏–º—Å–∫–æ–≥–æ (–ü—è—Ç–Ω–∏—Ü–∫–∞—è —É–ª.)
          - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≤ —Å—Ç–∏–ª–µ –±–∞—Ä–æ–∫–∫–æ XVIII –≤–µ–∫–∞
          - –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ—Ä–µ—Å–∫–∏
          - –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∏–∫–æ–Ω–æ—Å—Ç–∞—Å

          3. –£—Å–∞–¥—å–±–∞ –î–µ–º–∏–¥–æ–≤—ã—Ö (–ë. –¢–æ–ª–º–∞—á–µ–≤—Å–∫–∏–π –ø–µ—Ä.)
          - –ö–ª–∞—Å—Å–∏—Ü–∏–∑–º —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–æ–¥–µ—Ä–Ω–∞
          - –ò—Å—Ç–æ—Ä–∏—è –∫—É–ø–µ—á–µ—Å–∫–æ–π —Å–µ–º—å–∏

          4. –ü—è—Ç–Ω–∏—Ü–∫–∞—è —É–ª–∏—Ü–∞
          - –û—Å–æ–±–Ω—è–∫ –∫—É–ø—Ü–∞ –ö—É–º–∞–Ω–∏–Ω–∞
          - –£—Å–∞–¥—å–±–∞ –ò–≥—É–º–Ω–æ–≤–∞
          - –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –∑–∞—Å—Ç—Ä–æ–π–∫–∞

          5. –û–≤—á–∏–Ω–Ω–∏–∫–æ–≤—Å–∫–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è
          - –ü–∞–Ω–æ—Ä–∞–º–∞ –ú–æ—Å–∫–≤—ã-—Ä–µ–∫–∏
          - –í–∏–¥—ã –Ω–∞ —Å—Ç–∞–ª–∏–Ω—Å–∫–∏–µ –≤—ã—Å–æ—Ç–∫–∏

          –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è –æ—Ç–¥—ã—Ö–∞:
          - –¢—Ä–∞–ø–µ–∑–Ω–∞—è ANTI–ü–ê (–ö–æ–ª—ã–º–∞–∂–Ω—ã–π –ø–µ—Ä.) - –ø–æ—Å—Ç–Ω–æ–µ –º–µ–Ω—é, 250-500‚ÇΩ
          - –†–µ—Å—Ç–æ—Ä–∞–Ω "–£—Ä—é–∫" (–ü—è—Ç–Ω–∏—Ü–∫–∞—è —É–ª.) - —É–∑–±–µ–∫—Å–∫–∞—è –∫—É—Ö–Ω—è, 600-1200‚ÇΩ
          - –ö–æ—Ñ–µ–π–Ω—è "–ú–∞—Ä—Ç" (–ü—è—Ç–Ω–∏—Ü–∫–∞—è —É–ª.) - –∫–æ—Ñ–µ –∏ –∑–∞–≤—Ç—Ä–∞–∫–∏, 400-800‚ÇΩ

          –í—Ä–µ–º—è –º–∞—Ä—à—Ä—É—Ç–∞: 3-4 —á–∞—Å–∞
          –ù–∞—á–∞–ª–æ: –º–µ—Ç—Ä–æ "–¢—Ä–µ—Ç—å—è–∫–æ–≤—Å–∫–∞—è"
          –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: –ø–µ—à–∫–æ–º + –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–º–≤–∞—è ‚Ññ–ê`,
          coordinates: [
            { lat: 55.741389, lng: 37.618786 }, // –¢—Ä–µ—Ç—å—è–∫–æ–≤—Å–∫–∞—è –≥–∞–ª–µ—Ä–µ—è
            { lat: 55.741667, lng: 37.629167 }, // –•—Ä–∞–º –ö–ª–∏–º–µ–Ω—Ç–∞
            { lat: 55.738889, lng: 37.621389 }, // –£—Å–∞–¥—å–±–∞ –î–µ–º–∏–¥–æ–≤—ã—Ö
            { lat: 55.740278, lng: 37.627778 }, // –ü—è—Ç–Ω–∏—Ü–∫–∞—è —É–ª–∏—Ü–∞
            { lat: 55.737500, lng: 37.626389 }  // –û–≤—á–∏–Ω–Ω–∏–∫–æ–≤—Å–∫–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è
          ],
          tags: ['–∏—Å–∫—É—Å—Å—Ç–≤–æ', '–∏—Å—Ç–æ—Ä–∏—è', '–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞', '–∫—É–ø–µ—á–µ—Å—Ç–≤–æ', '–ø—Ä–∞–≤–æ—Å–ª–∞–≤–∏–µ'],
          duration: 240, // –≤ –º–∏–Ω—É—Ç–∞—Ö
          distance: 3.5, // –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö
          difficulty: '—Å—Ä–µ–¥–Ω—è—è',
          season: '–ª—é–±–æ–π',
          time_of_day: ['—É—Ç—Ä–æ', '–¥–µ–Ω—å', '–≤–µ—á–µ—Ä']
        }
      ],
      // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ...
    };

    return `–°–æ–∑–¥–∞–π –æ—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø–µ—à–µ—Ö–æ–¥–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –ø–æ –ú–æ—Å–∫–≤–µ. –ú–∞—Ä—à—Ä—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –∏ –ª–æ–≥–∏—á–Ω—ã–º, —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞.

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–∞—Ä—à—Ä—É—Ç–∞:
–£—á–∞—Å—Ç–Ω–∏–∫–∏: ${formData.withWhom}
–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ${formData.startTime}
–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${formData.duration} —á–∞—Å–∞
–ò–Ω—Ç–µ—Ä–µ—Å—ã: ${formData.interests.join(', ')}
–ë—é–¥–∂–µ—Ç –Ω–∞ –∫–∞—Ñ–µ: ${formData.cafeBudget}
–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: ${formData.transportPreference}
–¢–µ–º–ø: ${formData.pace}
${formData.accessibility ? '–ù—É–∂–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞—è —Å—Ä–µ–¥–∞' : ''}
${formData.avoidCrowds ? '–ò–∑–±–µ–≥–∞—Ç—å –ª—é–¥–Ω—ã—Ö –º–µ—Å—Ç' : ''}
–ü–æ–∂–µ–ª–∞–Ω–∏—è: ${formData.additionalWishes}

–î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞ –º–∞—Ä—à—Ä—É—Ç–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
### –≠—Ç–∞–ø 1: [–ù–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –∏–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏]
‚åö –í—Ä–µ–º—è: [–¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å]
üó∫Ô∏è –ú–∞—Ä—à—Ä—É—Ç: [–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —É–ª–∏—Ü, –ø–æ–≤–æ—Ä–æ—Ç–æ–≤, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤]
üöï –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: [–ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è]
üëÄ –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:
- [–ù–∞–∑–≤–∞–Ω–∏–µ]: [2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è]
- [–ù–∞–∑–≤–∞–Ω–∏–µ]: [2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è]
üç¥ –ì–¥–µ –ø–æ–µ—Å—Ç—å:
- [–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è]: [–∫—É—Ö–Ω—è, —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏]
- [–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è]: [–∫—É—Ö–Ω—è, —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏]
üìå –°–æ–≤–µ—Ç—ã:
‚úì [–°–æ–≤–µ—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è]
‚úì [–°–æ–≤–µ—Ç –ø–æ –±–∏–ª–µ—Ç–∞–º/–æ—á–µ—Ä–µ–¥—è–º]
‚úì [–î—Ä—É–≥–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã]
üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: [55.XXXXX, 37.XXXXX]

–í–∞–∂–Ω–æ:
1. –£—á–∏—Ç—ã–≤–∞–π –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –∏ —Å–µ–∑–æ–Ω
2. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–π –≤—Ä–µ–º—è –Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥—ã
3. –î–æ–±–∞–≤–ª—è–π –≤—Ä–µ–º—è –Ω–∞ –æ—Å–º–æ—Ç—Ä
4. –£—á–∏—Ç—ã–≤–∞–π –ø–µ—Ä–µ—Ä—ã–≤—ã –Ω–∞ –æ—Ç–¥—ã—Ö
5. –ü—Ä–µ–¥–ª–∞–≥–∞–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
6. –£–∫–∞–∑—ã–≤–∞–π –º–µ—Å—Ç–∞ –¥–ª—è —Ñ–æ—Ç–æ
7. –î–æ–±–∞–≤–ª—è–π –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã`;
  }

  private parseResponse(response: any): RouteData {
    try {
      const text = response?.candidates?.[0]?.content?.parts?.[0]?.text;
      if (!text) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API');
      }

      const stages = this.parseStages(text);
      const coordinates = this.parseCoordinates(text);

      return {
        stages: stages,
        coordinates: coordinates,
        mapUrl: this.generateMapUrl(coordinates)
      };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –æ—Ç–≤–µ—Ç–∞:', error);
      throw error;
    }
  }

  private parseStages(text: string): any[] {
    const stages = text.split('### –≠—Ç–∞–ø').filter(Boolean).map((stage: string) => {
      const timeMatch = stage.match(/‚åö –í—Ä–µ–º—è: (.+)/);
      const titleMatch = stage.match(/\d+: (.+?)\n/);
      const coordsMatch = stage.match(/üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: (.+)/);
      const routeMatch = stage.match(/üó∫Ô∏è –ú–∞—Ä—à—Ä—É—Ç:([^üöï]+)/s);
      const transportMatch = stage.match(/üöï –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: (.+)/);

      const activities = [
        ...(stage.match(/üëÄ –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:([^üç¥]+)/s)?.[1] || '')
          .split('\n')
          .filter(line => line.trim().startsWith('-'))
          .map(line => line.trim()),
        ...(stage.match(/üç¥ –ì–¥–µ –ø–æ–µ—Å—Ç—å:([^üìå]+)/s)?.[1] || '')
          .split('\n')
          .filter(line => line.trim().startsWith('-'))
          .map(line => line.trim())
      ];

      const tips = (stage.match(/üìå –°–æ–≤–µ—Ç—ã:([^üìç]+)/s)?.[1] || '')
        .split('\n')
        .filter(line => line.trim().startsWith('‚úì'))
        .map(line => line.trim());

      return {
        title: titleMatch?.[1].trim() || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
        time: timeMatch?.[1].trim() || '',
        description: routeMatch?.[1].trim() || '',
        transport: transportMatch?.[1].trim() || '',
        activities,
        tips,
        coordinates: [this.parseCoordinates(coordsMatch?.[1] || '')[0]]
      };
    });

    interface StageWithCoords {
      coordinates: Array<{ lat: number; lng: number }>;
      title: string;
      time: string;
      description: string;
      transport: string;
      activities: string[];
      tips: string[];
    }

    return stages.map(({ coordinates, ...rest }: StageWithCoords) => rest);
  }

  private parseCoordinates(text: string): Array<{lat: number, lng: number}> {
    const coordsMatches = text.match(/üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ([0-9.,\s]+)/g) || [];
    return coordsMatches.map(match => {
      const [lat, lng] = match.split(':')[1].trim().split(',').map(Number);
      return isNaN(lat) || isNaN(lng)
        ? { lat: 55.751244, lng: 37.618423 }
        : { lat, lng };
    });
  }

  private generateMapUrl(coordinates: any[]): string {
    if (!coordinates.length) return '';
    const points = coordinates
      .map(coord => `${coord.lat},${coord.lng}`)
      .join('~');
    return `https://yandex.ru/maps/?rtext=${points}&rtt=pd&mode=routes&rtt=pd`;
  }

  setCurrentRoute(route: RouteData) {
    this.currentRoute = route;
  }

  getCurrentRoute(): RouteData | null {
    return this.currentRoute;
  }

  async improveRoute(currentRoute: RouteData, improvements: { remove: string; add: string }): Promise<RouteData> {
    const prompt = `–£–ª—É—á—à–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–∞—Ä—à—Ä—É—Ç —Å —É—á–µ—Ç–æ–º –ø–æ–∂–µ–ª–∞–Ω–∏–π:
    –£–±—Ä–∞—Ç—å: ${improvements.remove}
    –î–æ–±–∞–≤–∏—Ç—å: ${improvements.add}

    –¢–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç:
    ${currentRoute.stages.map((stage, i) => `
      –≠—Ç–∞–ø ${i + 1}: ${stage.title}
      –í—Ä–µ–º—è: ${stage.time}
      –û–ø–∏—Å–∞–Ω–∏–µ: ${stage.description}
    `).join('\n')}`;

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –º–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, –Ω–æ —Å –Ω–æ–≤—ã–º –ø—Ä–æ–º–ø—Ç–æ–º
    return this.generateRoute({ ...currentRoute, improvements: prompt });
  }
}
